// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace pj_backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250420060010_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.13");

            modelBuilder.Entity("pj_backend.Models.Database.Entities.Achievement", b =>
                {
                    b.Property<int>("AchievementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("AchievementId");

                    b.ToTable("achievements", (string)null);
                });

            modelBuilder.Entity("pj_backend.Models.Database.Entities.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("GameId");

                    b.ToTable("games", (string)null);
                });

            modelBuilder.Entity("pj_backend.Models.Database.Entities.GameMatch", b =>
                {
                    b.Property<int>("GameMatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT")
                        .HasColumnName("date");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("game_id");

                    b.Property<int>("GuestUserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("guest_user_id");

                    b.Property<int>("HostUserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("host_user_id");

                    b.HasKey("GameMatchId");

                    b.HasIndex("GameId");

                    b.HasIndex("GuestUserId");

                    b.HasIndex("HostUserId");

                    b.ToTable("game_matches", (string)null);
                });

            modelBuilder.Entity("pj_backend.Models.Database.Entities.Ranking", b =>
                {
                    b.Property<int>("RankingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("gameId");

                    b.Property<int>("MaxScore")
                        .HasColumnType("INTEGER")
                        .HasColumnName("maxScore");

                    b.Property<int>("UserId")
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER")
                        .HasColumnName("userId");

                    b.HasKey("RankingId");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("ranking", (string)null);
                });

            modelBuilder.Entity("pj_backend.Models.Database.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT")
                        .HasColumnName("hash_password");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("rol");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("pj_backend.Models.Database.Entities.UserAchievement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("AchievementId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("achievement_id");

                    b.Property<DateTime>("DateAchieved")
                        .HasColumnType("TEXT")
                        .HasColumnName("date_achieved");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("AchievementId");

                    b.HasIndex("UserId");

                    b.ToTable("user_achievements", (string)null);
                });

            modelBuilder.Entity("pj_backend.Models.Database.Entities.GameMatch", b =>
                {
                    b.HasOne("pj_backend.Models.Database.Entities.Game", "Game")
                        .WithMany("Matches")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pj_backend.Models.Database.Entities.User", "GuestUser")
                        .WithMany("JoinedMatches")
                        .HasForeignKey("GuestUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("pj_backend.Models.Database.Entities.User", "HostUser")
                        .WithMany("HostedMatches")
                        .HasForeignKey("HostUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("GuestUser");

                    b.Navigation("HostUser");
                });

            modelBuilder.Entity("pj_backend.Models.Database.Entities.Ranking", b =>
                {
                    b.HasOne("pj_backend.Models.Database.Entities.Game", "Game")
                        .WithMany("Rankings")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pj_backend.Models.Database.Entities.User", "User")
                        .WithMany("Rankings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("pj_backend.Models.Database.Entities.UserAchievement", b =>
                {
                    b.HasOne("pj_backend.Models.Database.Entities.Achievement", "Achievement")
                        .WithMany("UserAchievements")
                        .HasForeignKey("AchievementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pj_backend.Models.Database.Entities.User", "User")
                        .WithMany("UserAchievements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achievement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("pj_backend.Models.Database.Entities.Achievement", b =>
                {
                    b.Navigation("UserAchievements");
                });

            modelBuilder.Entity("pj_backend.Models.Database.Entities.Game", b =>
                {
                    b.Navigation("Matches");

                    b.Navigation("Rankings");
                });

            modelBuilder.Entity("pj_backend.Models.Database.Entities.User", b =>
                {
                    b.Navigation("HostedMatches");

                    b.Navigation("JoinedMatches");

                    b.Navigation("Rankings");

                    b.Navigation("UserAchievements");
                });
#pragma warning restore 612, 618
        }
    }
}
